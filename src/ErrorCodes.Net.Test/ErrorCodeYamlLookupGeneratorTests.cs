using ErrorCodes.Net.Analyzers;
using Microsoft.CodeAnalysis.Text;
using System.Text;
using ErrorCodes.Net.Analyzers.DiagnosticErrors;
using Microsoft.CodeAnalysis.Testing;

namespace ErrorCodes.Net.Test;

using VerifyYamlCS = CSharpSourceGeneratorVerifier<ErrorCodeYamlLookupGenerator>;

[TestClass]
public class ErrorCodeYamlLookupGeneratorTests
{
    [TestMethod]
    public async Task ErrorCodeLookupGenerator_MultipleEnumValues_CompilesCorrectly()
    {
        var yaml = """
                   ---
                   projectId: 1
                   namespace: ErrorCodes.Net.Generated
                   errorTypes:
                   - name: TestEnum
                     errorTypeId: 2
                     errorCodes:
                     - errorCode: 1
                       name: TestError
                     - errorCode: 2
                       name: TestError2
                   """;

        var generated = """
                        // ------------------------------------------------------------------------------
                        //  <auto-generated>
                        //      This code was generated by ErrorCodes.Net.
                        //
                        //      Changes to this file may cause incorrect behavior and will be lost if
                        //      the code is regenerated.
                        //  </auto-generated>
                        // ------------------------------------------------------------------------------
                        #region Designer generated code
                        #pragma warning disable
                        using System.Collections.Generic;
                        using ErrorCodes.Net;
                        
                        namespace ErrorCodes.Net.Generated
                        {
                        
                            /// <summary>
                            /// Auto-generated class
                            /// </summary>
                            public class TestEnumErrors
                            {
                                public ErrorCodeInfo TestError { get; } = new ErrorCodeInfo("0x01020001", 0, 1, 2, 1);
                                public ErrorCodeInfo TestError2 { get; } = new ErrorCodeInfo("0x01020002", 0, 1, 2, 2);
                            }
                        
                            /// <summary>
                            /// Generated lookup class for error codes
                            /// </summary>
                            public static class ErrorCodeLookup
                            {
                                public static TestEnumErrors TestEnum { get; } = new TestEnumErrors();
                        
                            }
                        }
                        #pragma warning restore
                        #endregion
                        """;

        await RunTest(yaml, generated);
    }
    
    [TestMethod]
    public async Task ErrorCodeLookupGenerator_SingleEnumValue_CompilesCorrectly()
    {
        var yaml = """
                   ---
                   projectId: 1
                   namespace: ErrorCodes.Net.Generated
                   errorTypes:
                   - name: TestEnum
                     errorTypeId: 2
                     errorCodes:
                     - errorCode: 1
                       name: TestError
                   """;

        var generated = """
                        // ------------------------------------------------------------------------------
                        //  <auto-generated>
                        //      This code was generated by ErrorCodes.Net.
                        //
                        //      Changes to this file may cause incorrect behavior and will be lost if
                        //      the code is regenerated.
                        //  </auto-generated>
                        // ------------------------------------------------------------------------------
                        #region Designer generated code
                        #pragma warning disable
                        using System.Collections.Generic;
                        using ErrorCodes.Net;

                        namespace ErrorCodes.Net.Generated
                        {
                        
                            /// <summary>
                            /// Auto-generated class
                            /// </summary>
                            public class TestEnumErrors
                            {
                                public ErrorCodeInfo TestError { get; } = new ErrorCodeInfo("0x01020001", 0, 1, 2, 1);
                            }
                        
                            /// <summary>
                            /// Generated lookup class for error codes
                            /// </summary>
                            public static class ErrorCodeLookup
                            {
                                public static TestEnumErrors TestEnum { get; } = new TestEnumErrors();
                        
                            }
                        }
                        #pragma warning restore
                        #endregion
                        """;

        await RunTest(yaml, generated);
    }
    
    [TestMethod]
    public async Task ErrorCodeLookupGenerator_MultipleEnumTypes_CompilesCorrectly()
    {
        var yaml = """
                   ---
                   projectId: 1
                   namespace: ErrorCodes.Net.Generated
                   errorTypes:
                   - name: TestEnum
                     errorTypeId: 2
                     errorCodes:
                     - errorCode: 1
                       name: TestError
                   - name: TestEnumType2
                     errorTypeId: 3
                     errorCodes:
                     - errorCode: 1
                       name: TestError
                   """;

        var generated = """
                        // ------------------------------------------------------------------------------
                        //  <auto-generated>
                        //      This code was generated by ErrorCodes.Net.
                        //
                        //      Changes to this file may cause incorrect behavior and will be lost if
                        //      the code is regenerated.
                        //  </auto-generated>
                        // ------------------------------------------------------------------------------
                        #region Designer generated code
                        #pragma warning disable
                        using System.Collections.Generic;
                        using ErrorCodes.Net;

                        namespace ErrorCodes.Net.Generated
                        {
                        
                            /// <summary>
                            /// Auto-generated class
                            /// </summary>
                            public class TestEnumErrors
                            {
                                public ErrorCodeInfo TestError { get; } = new ErrorCodeInfo("0x01020001", 0, 1, 2, 1);
                            }
                            /// <summary>
                            /// Auto-generated class
                            /// </summary>
                            public class TestEnumType2Errors
                            {
                                public ErrorCodeInfo TestError { get; } = new ErrorCodeInfo("0x01030001", 0, 1, 3, 1);
                            }
                        
                            /// <summary>
                            /// Generated lookup class for error codes
                            /// </summary>
                            public static class ErrorCodeLookup
                            {
                                public static TestEnumErrors TestEnum { get; } = new TestEnumErrors();
                                public static TestEnumType2Errors TestEnumType2 { get; } = new TestEnumType2Errors();
                        
                            }
                        }
                        #pragma warning restore
                        #endregion
                        """;

        await RunTest(yaml, generated);
    }
    
    [TestMethod]
    public async Task ErrorCodeLookupGenerator_EnumsWithSummary_AddsSummaryToGeneratedClass()
    {
        var yaml = """
                   ---
                   projectId: 1
                   namespace: ErrorCodes.Net.Generated
                   errorTypes:
                   - name: TestEnum
                     errorTypeId: 2
                     description: Test error description
                     errorCodes:
                     - errorCode: 1
                       name: TestError
                   """;

        var generated = """
                        // ------------------------------------------------------------------------------
                        //  <auto-generated>
                        //      This code was generated by ErrorCodes.Net.
                        //
                        //      Changes to this file may cause incorrect behavior and will be lost if
                        //      the code is regenerated.
                        //  </auto-generated>
                        // ------------------------------------------------------------------------------
                        #region Designer generated code
                        #pragma warning disable
                        using System.Collections.Generic;
                        using ErrorCodes.Net;

                        namespace ErrorCodes.Net.Generated
                        {
                        
                            /// <summary>
                            /// Test error description
                            /// </summary>
                            public class TestEnumErrors
                            {
                                public ErrorCodeInfo TestError { get; } = new ErrorCodeInfo("0x01020001", 0, 1, 2, 1);
                            }
                        
                            /// <summary>
                            /// Generated lookup class for error codes
                            /// </summary>
                            public static class ErrorCodeLookup
                            {
                                public static TestEnumErrors TestEnum { get; } = new TestEnumErrors();
                        
                            }
                        }
                        #pragma warning restore
                        #endregion
                        """;

        await RunTest(yaml, generated);
    }
    
    [TestMethod]
    public async Task YamlErrorCodeLookupGenerator_MultipleEnumValues_CompilesCorrectly()
    {
        var yaml = """
                   ---
                   projectId: 1
                   namespace: ErrorCodes.Net.Generated
                   errorTypes:
                   - name: TestEnum
                     errorTypeId: 2
                     errorCodes:
                     - errorCode: 1
                       name: TestError
                     - errorCode: 2
                       name: TestError2
                   """;

        var generated = """
                        // ------------------------------------------------------------------------------
                        //  <auto-generated>
                        //      This code was generated by ErrorCodes.Net.
                        //
                        //      Changes to this file may cause incorrect behavior and will be lost if
                        //      the code is regenerated.
                        //  </auto-generated>
                        // ------------------------------------------------------------------------------
                        #region Designer generated code
                        #pragma warning disable
                        using System.Collections.Generic;
                        using ErrorCodes.Net;
                        
                        namespace ErrorCodes.Net.Generated
                        {
                        
                            /// <summary>
                            /// Auto-generated class
                            /// </summary>
                            public class TestEnumErrors
                            {
                                public ErrorCodeInfo TestError { get; } = new ErrorCodeInfo("0x01020001", 0, 1, 2, 1);
                                public ErrorCodeInfo TestError2 { get; } = new ErrorCodeInfo("0x01020002", 0, 1, 2, 2);
                            }
                        
                            /// <summary>
                            /// Generated lookup class for error codes
                            /// </summary>
                            public static class ErrorCodeLookup
                            {
                                public static TestEnumErrors TestEnum { get; } = new TestEnumErrors();
                        
                            }
                        }
                        #pragma warning restore
                        #endregion
                        """;

        await RunTest(yaml, generated);
    }
    
    [TestMethod]
    public async Task YamlErrorCodeLookupGenerator_NoNamespace_GivesError0001()
    {
        var yaml = """
                   ---
                   projectId: 1
                   errorTypes:
                   - name: TestEnum
                     errorTypeId: 2
                     errorCodes:
                     - errorCode: 1
                       name: TestError
                     - errorCode: 2
                       name: TestError2
                   """;
        
        var expectedDiagnostic = new DiagnosticResult(YamlDiagnosticErrors.MissingNamespaceDescriptor);
        expectedDiagnostic = expectedDiagnostic.WithLocation("ErrorCodes.yaml", 1, 1);

        await RunTest(yaml, string.Empty, [expectedDiagnostic]);
    }
    
    private Task RunTest(string yaml, string generated, List<DiagnosticResult>? diagnosticResults = null)
    {
        var validator = new VerifyYamlCS.Test
        {
            TestState = 
            {
                AdditionalFiles =
                {
                    ("ErrorCodes.yaml", yaml)
                }
            }
        };

        if (!string.IsNullOrEmpty(generated))
        {
            validator.TestState.GeneratedSources.Add(
                (typeof(ErrorCodeYamlLookupGenerator), 
                    ErrorCodeYamlLookupGenerator.GENERATED_FILE_NAME,
                    SourceText.From(generated, Encoding.UTF8,
                        SourceHashAlgorithm.Sha256)));
        }

        if (diagnosticResults is not null)
        {
            validator.ExpectedDiagnostics.AddRange(diagnosticResults);
        }
        
        return validator.RunAsync();
    }
}
